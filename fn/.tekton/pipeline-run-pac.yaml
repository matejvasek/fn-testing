
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    "boson.dev/function": "true"
    "boson.dev/runtime": "typescript"
    "function.knative.dev": "true"
    "function.knative.dev/name": "fn"
    "function.knative.dev/runtime": "typescript"
    
    tekton.dev/pipeline: fn-pack-git-pipeline
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[subdir]"

    # Fetch the git-clone task from hub
    pipelinesascode.tekton.dev/task: git-clone

    # Fetch the func-buildpacks task
    pipelinesascode.tekton.dev/task-1: https://raw.githubusercontent.com/knative/func/main/pkg/pipelines/resources/tekton/task/func-buildpacks/0.2/func-buildpacks.yaml

    # Fetch the func-deploy task
    pipelinesascode.tekton.dev/task-2: https://raw.githubusercontent.com/knative/func/main/pkg/pipelines/resources/tekton/task/func-deploy/0.1/func-deploy.yaml

    # Fetch the pipelie definition from the .tekton directory
    pipelinesascode.tekton.dev/pipeline: .tekton/pipeline-pac.yaml

    # How many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"

    # User defined Annotations
    
  generateName: fn-pack-git-pipeline-run
spec:
  params:
    - name: gitRepository
      value: {{ repo_url }}
    - name: gitRevision
      value: {{ revision }}
    - name: contextDir
      value: fn
    - name: imageName
      value: quay.io/mvasek/fn:latest
    - name: registry
      value: quay.io/mvasek
    - name: builderImage
      value: ghcr.io/knative/builder-jammy-base:latest
    - name: buildEnvs
      value:
        - BP_NODE_RUN_SCRIPTS=build
        
  pipelineRef:
   name: fn-pack-git-pipeline
  workspaces:
    - name: source-workspace
      persistentVolumeClaim:
        claimName: fn-pack-git-pipeline-pvc
      subPath: source
    - name: cache-workspace
      persistentVolumeClaim:
        claimName: fn-pack-git-pipeline-pvc
      subPath: cache
    - name: dockerconfig-workspace
      secret:
        secretName: fn-pack-git-pipeline-secret
